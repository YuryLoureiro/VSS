// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: labview.proto

#ifndef PROTOBUF_labview_2eproto__INCLUDED
#define PROTOBUF_labview_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Labview {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_labview_2eproto();
void protobuf_AssignDesc_labview_2eproto();
void protobuf_ShutdownFile_labview_2eproto();

class DataVel;

// ===================================================================

class DataVel : public ::google::protobuf::Message {
 public:
  DataVel();
  virtual ~DataVel();

  DataVel(const DataVel& from);

  inline DataVel& operator=(const DataVel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataVel& default_instance();

  void Swap(DataVel* other);

  // implements Message ----------------------------------------------

  DataVel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataVel& from);
  void MergeFrom(const DataVel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 friend1VelX = 1;
  inline bool has_friend1velx() const;
  inline void clear_friend1velx();
  static const int kFriend1VelXFieldNumber = 1;
  inline ::google::protobuf::int32 friend1velx() const;
  inline void set_friend1velx(::google::protobuf::int32 value);

  // required int32 friend1VelY = 2;
  inline bool has_friend1vely() const;
  inline void clear_friend1vely();
  static const int kFriend1VelYFieldNumber = 2;
  inline ::google::protobuf::int32 friend1vely() const;
  inline void set_friend1vely(::google::protobuf::int32 value);

  // required int32 friend2VelX = 3;
  inline bool has_friend2velx() const;
  inline void clear_friend2velx();
  static const int kFriend2VelXFieldNumber = 3;
  inline ::google::protobuf::int32 friend2velx() const;
  inline void set_friend2velx(::google::protobuf::int32 value);

  // required int32 friend2VelY = 4;
  inline bool has_friend2vely() const;
  inline void clear_friend2vely();
  static const int kFriend2VelYFieldNumber = 4;
  inline ::google::protobuf::int32 friend2vely() const;
  inline void set_friend2vely(::google::protobuf::int32 value);

  // required int32 friend3VelX = 5;
  inline bool has_friend3velx() const;
  inline void clear_friend3velx();
  static const int kFriend3VelXFieldNumber = 5;
  inline ::google::protobuf::int32 friend3velx() const;
  inline void set_friend3velx(::google::protobuf::int32 value);

  // required int32 friend3VelY = 6;
  inline bool has_friend3vely() const;
  inline void clear_friend3vely();
  static const int kFriend3VelYFieldNumber = 6;
  inline ::google::protobuf::int32 friend3vely() const;
  inline void set_friend3vely(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Labview.DataVel)
 private:
  inline void set_has_friend1velx();
  inline void clear_has_friend1velx();
  inline void set_has_friend1vely();
  inline void clear_has_friend1vely();
  inline void set_has_friend2velx();
  inline void clear_has_friend2velx();
  inline void set_has_friend2vely();
  inline void clear_has_friend2vely();
  inline void set_has_friend3velx();
  inline void clear_has_friend3velx();
  inline void set_has_friend3vely();
  inline void clear_has_friend3vely();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friend1velx_;
  ::google::protobuf::int32 friend1vely_;
  ::google::protobuf::int32 friend2velx_;
  ::google::protobuf::int32 friend2vely_;
  ::google::protobuf::int32 friend3velx_;
  ::google::protobuf::int32 friend3vely_;
  friend void  protobuf_AddDesc_labview_2eproto();
  friend void protobuf_AssignDesc_labview_2eproto();
  friend void protobuf_ShutdownFile_labview_2eproto();

  void InitAsDefaultInstance();
  static DataVel* default_instance_;
};
// ===================================================================


// ===================================================================

// DataVel

// required int32 friend1VelX = 1;
inline bool DataVel::has_friend1velx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataVel::set_has_friend1velx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataVel::clear_has_friend1velx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataVel::clear_friend1velx() {
  friend1velx_ = 0;
  clear_has_friend1velx();
}
inline ::google::protobuf::int32 DataVel::friend1velx() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend1VelX)
  return friend1velx_;
}
inline void DataVel::set_friend1velx(::google::protobuf::int32 value) {
  set_has_friend1velx();
  friend1velx_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend1VelX)
}

// required int32 friend1VelY = 2;
inline bool DataVel::has_friend1vely() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataVel::set_has_friend1vely() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataVel::clear_has_friend1vely() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataVel::clear_friend1vely() {
  friend1vely_ = 0;
  clear_has_friend1vely();
}
inline ::google::protobuf::int32 DataVel::friend1vely() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend1VelY)
  return friend1vely_;
}
inline void DataVel::set_friend1vely(::google::protobuf::int32 value) {
  set_has_friend1vely();
  friend1vely_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend1VelY)
}

// required int32 friend2VelX = 3;
inline bool DataVel::has_friend2velx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataVel::set_has_friend2velx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataVel::clear_has_friend2velx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataVel::clear_friend2velx() {
  friend2velx_ = 0;
  clear_has_friend2velx();
}
inline ::google::protobuf::int32 DataVel::friend2velx() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend2VelX)
  return friend2velx_;
}
inline void DataVel::set_friend2velx(::google::protobuf::int32 value) {
  set_has_friend2velx();
  friend2velx_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend2VelX)
}

// required int32 friend2VelY = 4;
inline bool DataVel::has_friend2vely() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataVel::set_has_friend2vely() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataVel::clear_has_friend2vely() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataVel::clear_friend2vely() {
  friend2vely_ = 0;
  clear_has_friend2vely();
}
inline ::google::protobuf::int32 DataVel::friend2vely() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend2VelY)
  return friend2vely_;
}
inline void DataVel::set_friend2vely(::google::protobuf::int32 value) {
  set_has_friend2vely();
  friend2vely_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend2VelY)
}

// required int32 friend3VelX = 5;
inline bool DataVel::has_friend3velx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataVel::set_has_friend3velx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataVel::clear_has_friend3velx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataVel::clear_friend3velx() {
  friend3velx_ = 0;
  clear_has_friend3velx();
}
inline ::google::protobuf::int32 DataVel::friend3velx() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend3VelX)
  return friend3velx_;
}
inline void DataVel::set_friend3velx(::google::protobuf::int32 value) {
  set_has_friend3velx();
  friend3velx_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend3VelX)
}

// required int32 friend3VelY = 6;
inline bool DataVel::has_friend3vely() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataVel::set_has_friend3vely() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataVel::clear_has_friend3vely() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataVel::clear_friend3vely() {
  friend3vely_ = 0;
  clear_has_friend3vely();
}
inline ::google::protobuf::int32 DataVel::friend3vely() const {
  // @@protoc_insertion_point(field_get:Labview.DataVel.friend3VelY)
  return friend3vely_;
}
inline void DataVel::set_friend3vely(::google::protobuf::int32 value) {
  set_has_friend3vely();
  friend3vely_ = value;
  // @@protoc_insertion_point(field_set:Labview.DataVel.friend3VelY)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Labview

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_labview_2eproto__INCLUDED
