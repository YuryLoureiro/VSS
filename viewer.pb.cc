// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "viewer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Viewer {

namespace {

const ::google::protobuf::Descriptor* DataFriend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataFriend_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataEnemy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataEnemy_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_viewer_2eproto() {
  protobuf_AddDesc_viewer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "viewer.proto");
  GOOGLE_CHECK(file != NULL);
  DataFriend_descriptor_ = file->message_type(0);
  static const int DataFriend_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, ballposex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, ballposey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend1posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend1posey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend1yaw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend2posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend2posey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend2yaw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend3posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend3posey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, friend3yaw_),
  };
  DataFriend_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataFriend_descriptor_,
      DataFriend::default_instance_,
      DataFriend_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataFriend, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataFriend));
  DataEnemy_descriptor_ = file->message_type(1);
  static const int DataEnemy_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy1posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy1posey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy2posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy2posey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy3posex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, enemy3posey_),
  };
  DataEnemy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataEnemy_descriptor_,
      DataEnemy::default_instance_,
      DataEnemy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataEnemy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataEnemy));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_viewer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataFriend_descriptor_, &DataFriend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataEnemy_descriptor_, &DataEnemy::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_viewer_2eproto() {
  delete DataFriend::default_instance_;
  delete DataFriend_reflection_;
  delete DataEnemy::default_instance_;
  delete DataEnemy_reflection_;
}

void protobuf_AddDesc_viewer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014viewer.proto\022\006Viewer\"\362\001\n\nDataFriend\022\021\n"
    "\tballPoseX\030\001 \002(\002\022\021\n\tballPoseY\030\002 \002(\002\022\024\n\014f"
    "riend1PoseX\030\003 \002(\002\022\024\n\014friend1PoseY\030\004 \002(\002\022"
    "\022\n\nfriend1Yaw\030\005 \002(\002\022\024\n\014friend2PoseX\030\006 \002("
    "\002\022\024\n\014friend2PoseY\030\007 \002(\002\022\022\n\nfriend2Yaw\030\010 "
    "\002(\002\022\024\n\014friend3PoseX\030\t \002(\002\022\024\n\014friend3Pose"
    "Y\030\n \002(\002\022\022\n\nfriend3Yaw\030\013 \002(\002\"\211\001\n\tDataEnem"
    "y\022\023\n\013enemy1PoseX\030\001 \002(\002\022\023\n\013enemy1PoseY\030\002 "
    "\002(\002\022\023\n\013enemy2PoseX\030\003 \002(\002\022\023\n\013enemy2PoseY\030"
    "\004 \002(\002\022\023\n\013enemy3PoseX\030\005 \002(\002\022\023\n\013enemy3Pose"
    "Y\030\006 \002(\002", 407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "viewer.proto", &protobuf_RegisterTypes);
  DataFriend::default_instance_ = new DataFriend();
  DataEnemy::default_instance_ = new DataEnemy();
  DataFriend::default_instance_->InitAsDefaultInstance();
  DataEnemy::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_viewer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_viewer_2eproto {
  StaticDescriptorInitializer_viewer_2eproto() {
    protobuf_AddDesc_viewer_2eproto();
  }
} static_descriptor_initializer_viewer_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DataFriend::kBallPoseXFieldNumber;
const int DataFriend::kBallPoseYFieldNumber;
const int DataFriend::kFriend1PoseXFieldNumber;
const int DataFriend::kFriend1PoseYFieldNumber;
const int DataFriend::kFriend1YawFieldNumber;
const int DataFriend::kFriend2PoseXFieldNumber;
const int DataFriend::kFriend2PoseYFieldNumber;
const int DataFriend::kFriend2YawFieldNumber;
const int DataFriend::kFriend3PoseXFieldNumber;
const int DataFriend::kFriend3PoseYFieldNumber;
const int DataFriend::kFriend3YawFieldNumber;
#endif  // !_MSC_VER

DataFriend::DataFriend()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Viewer.DataFriend)
}

void DataFriend::InitAsDefaultInstance() {
}

DataFriend::DataFriend(const DataFriend& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Viewer.DataFriend)
}

void DataFriend::SharedCtor() {
  _cached_size_ = 0;
  ballposex_ = 0;
  ballposey_ = 0;
  friend1posex_ = 0;
  friend1posey_ = 0;
  friend1yaw_ = 0;
  friend2posex_ = 0;
  friend2posey_ = 0;
  friend2yaw_ = 0;
  friend3posex_ = 0;
  friend3posey_ = 0;
  friend3yaw_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataFriend::~DataFriend() {
  // @@protoc_insertion_point(destructor:Viewer.DataFriend)
  SharedDtor();
}

void DataFriend::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataFriend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataFriend_descriptor_;
}

const DataFriend& DataFriend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_viewer_2eproto();
  return *default_instance_;
}

DataFriend* DataFriend::default_instance_ = NULL;

DataFriend* DataFriend::New() const {
  return new DataFriend;
}

void DataFriend::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DataFriend*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(ballposex_, friend2yaw_);
  }
  ZR_(friend3posex_, friend3yaw_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Viewer.DataFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float ballPoseX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ballposex_)));
          set_has_ballposex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_ballPoseY;
        break;
      }

      // required float ballPoseY = 2;
      case 2: {
        if (tag == 21) {
         parse_ballPoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ballposey_)));
          set_has_ballposey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_friend1PoseX;
        break;
      }

      // required float friend1PoseX = 3;
      case 3: {
        if (tag == 29) {
         parse_friend1PoseX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend1posex_)));
          set_has_friend1posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_friend1PoseY;
        break;
      }

      // required float friend1PoseY = 4;
      case 4: {
        if (tag == 37) {
         parse_friend1PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend1posey_)));
          set_has_friend1posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_friend1Yaw;
        break;
      }

      // required float friend1Yaw = 5;
      case 5: {
        if (tag == 45) {
         parse_friend1Yaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend1yaw_)));
          set_has_friend1yaw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_friend2PoseX;
        break;
      }

      // required float friend2PoseX = 6;
      case 6: {
        if (tag == 53) {
         parse_friend2PoseX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend2posex_)));
          set_has_friend2posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_friend2PoseY;
        break;
      }

      // required float friend2PoseY = 7;
      case 7: {
        if (tag == 61) {
         parse_friend2PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend2posey_)));
          set_has_friend2posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_friend2Yaw;
        break;
      }

      // required float friend2Yaw = 8;
      case 8: {
        if (tag == 69) {
         parse_friend2Yaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend2yaw_)));
          set_has_friend2yaw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_friend3PoseX;
        break;
      }

      // required float friend3PoseX = 9;
      case 9: {
        if (tag == 77) {
         parse_friend3PoseX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend3posex_)));
          set_has_friend3posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_friend3PoseY;
        break;
      }

      // required float friend3PoseY = 10;
      case 10: {
        if (tag == 85) {
         parse_friend3PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend3posey_)));
          set_has_friend3posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_friend3Yaw;
        break;
      }

      // required float friend3Yaw = 11;
      case 11: {
        if (tag == 93) {
         parse_friend3Yaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &friend3yaw_)));
          set_has_friend3yaw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Viewer.DataFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Viewer.DataFriend)
  return false;
#undef DO_
}

void DataFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Viewer.DataFriend)
  // required float ballPoseX = 1;
  if (has_ballposex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ballposex(), output);
  }

  // required float ballPoseY = 2;
  if (has_ballposey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->ballposey(), output);
  }

  // required float friend1PoseX = 3;
  if (has_friend1posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->friend1posex(), output);
  }

  // required float friend1PoseY = 4;
  if (has_friend1posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->friend1posey(), output);
  }

  // required float friend1Yaw = 5;
  if (has_friend1yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->friend1yaw(), output);
  }

  // required float friend2PoseX = 6;
  if (has_friend2posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->friend2posex(), output);
  }

  // required float friend2PoseY = 7;
  if (has_friend2posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->friend2posey(), output);
  }

  // required float friend2Yaw = 8;
  if (has_friend2yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->friend2yaw(), output);
  }

  // required float friend3PoseX = 9;
  if (has_friend3posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->friend3posex(), output);
  }

  // required float friend3PoseY = 10;
  if (has_friend3posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->friend3posey(), output);
  }

  // required float friend3Yaw = 11;
  if (has_friend3yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->friend3yaw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Viewer.DataFriend)
}

::google::protobuf::uint8* DataFriend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Viewer.DataFriend)
  // required float ballPoseX = 1;
  if (has_ballposex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ballposex(), target);
  }

  // required float ballPoseY = 2;
  if (has_ballposey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->ballposey(), target);
  }

  // required float friend1PoseX = 3;
  if (has_friend1posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->friend1posex(), target);
  }

  // required float friend1PoseY = 4;
  if (has_friend1posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->friend1posey(), target);
  }

  // required float friend1Yaw = 5;
  if (has_friend1yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->friend1yaw(), target);
  }

  // required float friend2PoseX = 6;
  if (has_friend2posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->friend2posex(), target);
  }

  // required float friend2PoseY = 7;
  if (has_friend2posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->friend2posey(), target);
  }

  // required float friend2Yaw = 8;
  if (has_friend2yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->friend2yaw(), target);
  }

  // required float friend3PoseX = 9;
  if (has_friend3posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->friend3posex(), target);
  }

  // required float friend3PoseY = 10;
  if (has_friend3posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->friend3posey(), target);
  }

  // required float friend3Yaw = 11;
  if (has_friend3yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->friend3yaw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Viewer.DataFriend)
  return target;
}

int DataFriend::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float ballPoseX = 1;
    if (has_ballposex()) {
      total_size += 1 + 4;
    }

    // required float ballPoseY = 2;
    if (has_ballposey()) {
      total_size += 1 + 4;
    }

    // required float friend1PoseX = 3;
    if (has_friend1posex()) {
      total_size += 1 + 4;
    }

    // required float friend1PoseY = 4;
    if (has_friend1posey()) {
      total_size += 1 + 4;
    }

    // required float friend1Yaw = 5;
    if (has_friend1yaw()) {
      total_size += 1 + 4;
    }

    // required float friend2PoseX = 6;
    if (has_friend2posex()) {
      total_size += 1 + 4;
    }

    // required float friend2PoseY = 7;
    if (has_friend2posey()) {
      total_size += 1 + 4;
    }

    // required float friend2Yaw = 8;
    if (has_friend2yaw()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required float friend3PoseX = 9;
    if (has_friend3posex()) {
      total_size += 1 + 4;
    }

    // required float friend3PoseY = 10;
    if (has_friend3posey()) {
      total_size += 1 + 4;
    }

    // required float friend3Yaw = 11;
    if (has_friend3yaw()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataFriend::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataFriend* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataFriend*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataFriend::MergeFrom(const DataFriend& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ballposex()) {
      set_ballposex(from.ballposex());
    }
    if (from.has_ballposey()) {
      set_ballposey(from.ballposey());
    }
    if (from.has_friend1posex()) {
      set_friend1posex(from.friend1posex());
    }
    if (from.has_friend1posey()) {
      set_friend1posey(from.friend1posey());
    }
    if (from.has_friend1yaw()) {
      set_friend1yaw(from.friend1yaw());
    }
    if (from.has_friend2posex()) {
      set_friend2posex(from.friend2posex());
    }
    if (from.has_friend2posey()) {
      set_friend2posey(from.friend2posey());
    }
    if (from.has_friend2yaw()) {
      set_friend2yaw(from.friend2yaw());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_friend3posex()) {
      set_friend3posex(from.friend3posex());
    }
    if (from.has_friend3posey()) {
      set_friend3posey(from.friend3posey());
    }
    if (from.has_friend3yaw()) {
      set_friend3yaw(from.friend3yaw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataFriend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataFriend::CopyFrom(const DataFriend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void DataFriend::Swap(DataFriend* other) {
  if (other != this) {
    std::swap(ballposex_, other->ballposex_);
    std::swap(ballposey_, other->ballposey_);
    std::swap(friend1posex_, other->friend1posex_);
    std::swap(friend1posey_, other->friend1posey_);
    std::swap(friend1yaw_, other->friend1yaw_);
    std::swap(friend2posex_, other->friend2posex_);
    std::swap(friend2posey_, other->friend2posey_);
    std::swap(friend2yaw_, other->friend2yaw_);
    std::swap(friend3posex_, other->friend3posex_);
    std::swap(friend3posey_, other->friend3posey_);
    std::swap(friend3yaw_, other->friend3yaw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataFriend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataFriend_descriptor_;
  metadata.reflection = DataFriend_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataEnemy::kEnemy1PoseXFieldNumber;
const int DataEnemy::kEnemy1PoseYFieldNumber;
const int DataEnemy::kEnemy2PoseXFieldNumber;
const int DataEnemy::kEnemy2PoseYFieldNumber;
const int DataEnemy::kEnemy3PoseXFieldNumber;
const int DataEnemy::kEnemy3PoseYFieldNumber;
#endif  // !_MSC_VER

DataEnemy::DataEnemy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Viewer.DataEnemy)
}

void DataEnemy::InitAsDefaultInstance() {
}

DataEnemy::DataEnemy(const DataEnemy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Viewer.DataEnemy)
}

void DataEnemy::SharedCtor() {
  _cached_size_ = 0;
  enemy1posex_ = 0;
  enemy1posey_ = 0;
  enemy2posex_ = 0;
  enemy2posey_ = 0;
  enemy3posex_ = 0;
  enemy3posey_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataEnemy::~DataEnemy() {
  // @@protoc_insertion_point(destructor:Viewer.DataEnemy)
  SharedDtor();
}

void DataEnemy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataEnemy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataEnemy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataEnemy_descriptor_;
}

const DataEnemy& DataEnemy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_viewer_2eproto();
  return *default_instance_;
}

DataEnemy* DataEnemy::default_instance_ = NULL;

DataEnemy* DataEnemy::New() const {
  return new DataEnemy;
}

void DataEnemy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DataEnemy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(enemy1posex_, enemy3posey_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataEnemy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Viewer.DataEnemy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float enemy1PoseX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy1posex_)));
          set_has_enemy1posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_enemy1PoseY;
        break;
      }

      // required float enemy1PoseY = 2;
      case 2: {
        if (tag == 21) {
         parse_enemy1PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy1posey_)));
          set_has_enemy1posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_enemy2PoseX;
        break;
      }

      // required float enemy2PoseX = 3;
      case 3: {
        if (tag == 29) {
         parse_enemy2PoseX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy2posex_)));
          set_has_enemy2posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_enemy2PoseY;
        break;
      }

      // required float enemy2PoseY = 4;
      case 4: {
        if (tag == 37) {
         parse_enemy2PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy2posey_)));
          set_has_enemy2posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_enemy3PoseX;
        break;
      }

      // required float enemy3PoseX = 5;
      case 5: {
        if (tag == 45) {
         parse_enemy3PoseX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy3posex_)));
          set_has_enemy3posex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_enemy3PoseY;
        break;
      }

      // required float enemy3PoseY = 6;
      case 6: {
        if (tag == 53) {
         parse_enemy3PoseY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &enemy3posey_)));
          set_has_enemy3posey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Viewer.DataEnemy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Viewer.DataEnemy)
  return false;
#undef DO_
}

void DataEnemy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Viewer.DataEnemy)
  // required float enemy1PoseX = 1;
  if (has_enemy1posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->enemy1posex(), output);
  }

  // required float enemy1PoseY = 2;
  if (has_enemy1posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->enemy1posey(), output);
  }

  // required float enemy2PoseX = 3;
  if (has_enemy2posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->enemy2posex(), output);
  }

  // required float enemy2PoseY = 4;
  if (has_enemy2posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->enemy2posey(), output);
  }

  // required float enemy3PoseX = 5;
  if (has_enemy3posex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->enemy3posex(), output);
  }

  // required float enemy3PoseY = 6;
  if (has_enemy3posey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->enemy3posey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Viewer.DataEnemy)
}

::google::protobuf::uint8* DataEnemy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Viewer.DataEnemy)
  // required float enemy1PoseX = 1;
  if (has_enemy1posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->enemy1posex(), target);
  }

  // required float enemy1PoseY = 2;
  if (has_enemy1posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->enemy1posey(), target);
  }

  // required float enemy2PoseX = 3;
  if (has_enemy2posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->enemy2posex(), target);
  }

  // required float enemy2PoseY = 4;
  if (has_enemy2posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->enemy2posey(), target);
  }

  // required float enemy3PoseX = 5;
  if (has_enemy3posex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->enemy3posex(), target);
  }

  // required float enemy3PoseY = 6;
  if (has_enemy3posey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->enemy3posey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Viewer.DataEnemy)
  return target;
}

int DataEnemy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float enemy1PoseX = 1;
    if (has_enemy1posex()) {
      total_size += 1 + 4;
    }

    // required float enemy1PoseY = 2;
    if (has_enemy1posey()) {
      total_size += 1 + 4;
    }

    // required float enemy2PoseX = 3;
    if (has_enemy2posex()) {
      total_size += 1 + 4;
    }

    // required float enemy2PoseY = 4;
    if (has_enemy2posey()) {
      total_size += 1 + 4;
    }

    // required float enemy3PoseX = 5;
    if (has_enemy3posex()) {
      total_size += 1 + 4;
    }

    // required float enemy3PoseY = 6;
    if (has_enemy3posey()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataEnemy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataEnemy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataEnemy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataEnemy::MergeFrom(const DataEnemy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enemy1posex()) {
      set_enemy1posex(from.enemy1posex());
    }
    if (from.has_enemy1posey()) {
      set_enemy1posey(from.enemy1posey());
    }
    if (from.has_enemy2posex()) {
      set_enemy2posex(from.enemy2posex());
    }
    if (from.has_enemy2posey()) {
      set_enemy2posey(from.enemy2posey());
    }
    if (from.has_enemy3posex()) {
      set_enemy3posex(from.enemy3posex());
    }
    if (from.has_enemy3posey()) {
      set_enemy3posey(from.enemy3posey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataEnemy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataEnemy::CopyFrom(const DataEnemy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataEnemy::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void DataEnemy::Swap(DataEnemy* other) {
  if (other != this) {
    std::swap(enemy1posex_, other->enemy1posex_);
    std::swap(enemy1posey_, other->enemy1posey_);
    std::swap(enemy2posex_, other->enemy2posex_);
    std::swap(enemy2posey_, other->enemy2posey_);
    std::swap(enemy3posex_, other->enemy3posex_);
    std::swap(enemy3posey_, other->enemy3posey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataEnemy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataEnemy_descriptor_;
  metadata.reflection = DataEnemy_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Viewer

// @@protoc_insertion_point(global_scope)
