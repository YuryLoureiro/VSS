// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewer.proto

#ifndef PROTOBUF_viewer_2eproto__INCLUDED
#define PROTOBUF_viewer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Viewer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_viewer_2eproto();
void protobuf_AssignDesc_viewer_2eproto();
void protobuf_ShutdownFile_viewer_2eproto();

class DataFriend;
class DataEnemy;

// ===================================================================

class DataFriend : public ::google::protobuf::Message {
 public:
  DataFriend();
  virtual ~DataFriend();

  DataFriend(const DataFriend& from);

  inline DataFriend& operator=(const DataFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFriend& default_instance();

  void Swap(DataFriend* other);

  // implements Message ----------------------------------------------

  DataFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFriend& from);
  void MergeFrom(const DataFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float ballPoseX = 1;
  inline bool has_ballposex() const;
  inline void clear_ballposex();
  static const int kBallPoseXFieldNumber = 1;
  inline float ballposex() const;
  inline void set_ballposex(float value);

  // required float ballPoseY = 2;
  inline bool has_ballposey() const;
  inline void clear_ballposey();
  static const int kBallPoseYFieldNumber = 2;
  inline float ballposey() const;
  inline void set_ballposey(float value);

  // required float friend1PoseX = 3;
  inline bool has_friend1posex() const;
  inline void clear_friend1posex();
  static const int kFriend1PoseXFieldNumber = 3;
  inline float friend1posex() const;
  inline void set_friend1posex(float value);

  // required float friend1PoseY = 4;
  inline bool has_friend1posey() const;
  inline void clear_friend1posey();
  static const int kFriend1PoseYFieldNumber = 4;
  inline float friend1posey() const;
  inline void set_friend1posey(float value);

  // required float friend1Yaw = 5;
  inline bool has_friend1yaw() const;
  inline void clear_friend1yaw();
  static const int kFriend1YawFieldNumber = 5;
  inline float friend1yaw() const;
  inline void set_friend1yaw(float value);

  // required float friend2PoseX = 6;
  inline bool has_friend2posex() const;
  inline void clear_friend2posex();
  static const int kFriend2PoseXFieldNumber = 6;
  inline float friend2posex() const;
  inline void set_friend2posex(float value);

  // required float friend2PoseY = 7;
  inline bool has_friend2posey() const;
  inline void clear_friend2posey();
  static const int kFriend2PoseYFieldNumber = 7;
  inline float friend2posey() const;
  inline void set_friend2posey(float value);

  // required float friend2Yaw = 8;
  inline bool has_friend2yaw() const;
  inline void clear_friend2yaw();
  static const int kFriend2YawFieldNumber = 8;
  inline float friend2yaw() const;
  inline void set_friend2yaw(float value);

  // required float friend3PoseX = 9;
  inline bool has_friend3posex() const;
  inline void clear_friend3posex();
  static const int kFriend3PoseXFieldNumber = 9;
  inline float friend3posex() const;
  inline void set_friend3posex(float value);

  // required float friend3PoseY = 10;
  inline bool has_friend3posey() const;
  inline void clear_friend3posey();
  static const int kFriend3PoseYFieldNumber = 10;
  inline float friend3posey() const;
  inline void set_friend3posey(float value);

  // required float friend3Yaw = 11;
  inline bool has_friend3yaw() const;
  inline void clear_friend3yaw();
  static const int kFriend3YawFieldNumber = 11;
  inline float friend3yaw() const;
  inline void set_friend3yaw(float value);

  // @@protoc_insertion_point(class_scope:Viewer.DataFriend)
 private:
  inline void set_has_ballposex();
  inline void clear_has_ballposex();
  inline void set_has_ballposey();
  inline void clear_has_ballposey();
  inline void set_has_friend1posex();
  inline void clear_has_friend1posex();
  inline void set_has_friend1posey();
  inline void clear_has_friend1posey();
  inline void set_has_friend1yaw();
  inline void clear_has_friend1yaw();
  inline void set_has_friend2posex();
  inline void clear_has_friend2posex();
  inline void set_has_friend2posey();
  inline void clear_has_friend2posey();
  inline void set_has_friend2yaw();
  inline void clear_has_friend2yaw();
  inline void set_has_friend3posex();
  inline void clear_has_friend3posex();
  inline void set_has_friend3posey();
  inline void clear_has_friend3posey();
  inline void set_has_friend3yaw();
  inline void clear_has_friend3yaw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float ballposex_;
  float ballposey_;
  float friend1posex_;
  float friend1posey_;
  float friend1yaw_;
  float friend2posex_;
  float friend2posey_;
  float friend2yaw_;
  float friend3posex_;
  float friend3posey_;
  float friend3yaw_;
  friend void  protobuf_AddDesc_viewer_2eproto();
  friend void protobuf_AssignDesc_viewer_2eproto();
  friend void protobuf_ShutdownFile_viewer_2eproto();

  void InitAsDefaultInstance();
  static DataFriend* default_instance_;
};
// -------------------------------------------------------------------

class DataEnemy : public ::google::protobuf::Message {
 public:
  DataEnemy();
  virtual ~DataEnemy();

  DataEnemy(const DataEnemy& from);

  inline DataEnemy& operator=(const DataEnemy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataEnemy& default_instance();

  void Swap(DataEnemy* other);

  // implements Message ----------------------------------------------

  DataEnemy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataEnemy& from);
  void MergeFrom(const DataEnemy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float enemy1PoseX = 1;
  inline bool has_enemy1posex() const;
  inline void clear_enemy1posex();
  static const int kEnemy1PoseXFieldNumber = 1;
  inline float enemy1posex() const;
  inline void set_enemy1posex(float value);

  // required float enemy1PoseY = 2;
  inline bool has_enemy1posey() const;
  inline void clear_enemy1posey();
  static const int kEnemy1PoseYFieldNumber = 2;
  inline float enemy1posey() const;
  inline void set_enemy1posey(float value);

  // required float enemy2PoseX = 3;
  inline bool has_enemy2posex() const;
  inline void clear_enemy2posex();
  static const int kEnemy2PoseXFieldNumber = 3;
  inline float enemy2posex() const;
  inline void set_enemy2posex(float value);

  // required float enemy2PoseY = 4;
  inline bool has_enemy2posey() const;
  inline void clear_enemy2posey();
  static const int kEnemy2PoseYFieldNumber = 4;
  inline float enemy2posey() const;
  inline void set_enemy2posey(float value);

  // required float enemy3PoseX = 5;
  inline bool has_enemy3posex() const;
  inline void clear_enemy3posex();
  static const int kEnemy3PoseXFieldNumber = 5;
  inline float enemy3posex() const;
  inline void set_enemy3posex(float value);

  // required float enemy3PoseY = 6;
  inline bool has_enemy3posey() const;
  inline void clear_enemy3posey();
  static const int kEnemy3PoseYFieldNumber = 6;
  inline float enemy3posey() const;
  inline void set_enemy3posey(float value);

  // @@protoc_insertion_point(class_scope:Viewer.DataEnemy)
 private:
  inline void set_has_enemy1posex();
  inline void clear_has_enemy1posex();
  inline void set_has_enemy1posey();
  inline void clear_has_enemy1posey();
  inline void set_has_enemy2posex();
  inline void clear_has_enemy2posex();
  inline void set_has_enemy2posey();
  inline void clear_has_enemy2posey();
  inline void set_has_enemy3posex();
  inline void clear_has_enemy3posex();
  inline void set_has_enemy3posey();
  inline void clear_has_enemy3posey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float enemy1posex_;
  float enemy1posey_;
  float enemy2posex_;
  float enemy2posey_;
  float enemy3posex_;
  float enemy3posey_;
  friend void  protobuf_AddDesc_viewer_2eproto();
  friend void protobuf_AssignDesc_viewer_2eproto();
  friend void protobuf_ShutdownFile_viewer_2eproto();

  void InitAsDefaultInstance();
  static DataEnemy* default_instance_;
};
// ===================================================================


// ===================================================================

// DataFriend

// required float ballPoseX = 1;
inline bool DataFriend::has_ballposex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFriend::set_has_ballposex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFriend::clear_has_ballposex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFriend::clear_ballposex() {
  ballposex_ = 0;
  clear_has_ballposex();
}
inline float DataFriend::ballposex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.ballPoseX)
  return ballposex_;
}
inline void DataFriend::set_ballposex(float value) {
  set_has_ballposex();
  ballposex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.ballPoseX)
}

// required float ballPoseY = 2;
inline bool DataFriend::has_ballposey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataFriend::set_has_ballposey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataFriend::clear_has_ballposey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataFriend::clear_ballposey() {
  ballposey_ = 0;
  clear_has_ballposey();
}
inline float DataFriend::ballposey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.ballPoseY)
  return ballposey_;
}
inline void DataFriend::set_ballposey(float value) {
  set_has_ballposey();
  ballposey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.ballPoseY)
}

// required float friend1PoseX = 3;
inline bool DataFriend::has_friend1posex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataFriend::set_has_friend1posex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataFriend::clear_has_friend1posex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataFriend::clear_friend1posex() {
  friend1posex_ = 0;
  clear_has_friend1posex();
}
inline float DataFriend::friend1posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend1PoseX)
  return friend1posex_;
}
inline void DataFriend::set_friend1posex(float value) {
  set_has_friend1posex();
  friend1posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend1PoseX)
}

// required float friend1PoseY = 4;
inline bool DataFriend::has_friend1posey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataFriend::set_has_friend1posey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataFriend::clear_has_friend1posey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataFriend::clear_friend1posey() {
  friend1posey_ = 0;
  clear_has_friend1posey();
}
inline float DataFriend::friend1posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend1PoseY)
  return friend1posey_;
}
inline void DataFriend::set_friend1posey(float value) {
  set_has_friend1posey();
  friend1posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend1PoseY)
}

// required float friend1Yaw = 5;
inline bool DataFriend::has_friend1yaw() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataFriend::set_has_friend1yaw() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataFriend::clear_has_friend1yaw() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataFriend::clear_friend1yaw() {
  friend1yaw_ = 0;
  clear_has_friend1yaw();
}
inline float DataFriend::friend1yaw() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend1Yaw)
  return friend1yaw_;
}
inline void DataFriend::set_friend1yaw(float value) {
  set_has_friend1yaw();
  friend1yaw_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend1Yaw)
}

// required float friend2PoseX = 6;
inline bool DataFriend::has_friend2posex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataFriend::set_has_friend2posex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataFriend::clear_has_friend2posex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataFriend::clear_friend2posex() {
  friend2posex_ = 0;
  clear_has_friend2posex();
}
inline float DataFriend::friend2posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend2PoseX)
  return friend2posex_;
}
inline void DataFriend::set_friend2posex(float value) {
  set_has_friend2posex();
  friend2posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend2PoseX)
}

// required float friend2PoseY = 7;
inline bool DataFriend::has_friend2posey() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataFriend::set_has_friend2posey() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataFriend::clear_has_friend2posey() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataFriend::clear_friend2posey() {
  friend2posey_ = 0;
  clear_has_friend2posey();
}
inline float DataFriend::friend2posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend2PoseY)
  return friend2posey_;
}
inline void DataFriend::set_friend2posey(float value) {
  set_has_friend2posey();
  friend2posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend2PoseY)
}

// required float friend2Yaw = 8;
inline bool DataFriend::has_friend2yaw() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataFriend::set_has_friend2yaw() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DataFriend::clear_has_friend2yaw() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DataFriend::clear_friend2yaw() {
  friend2yaw_ = 0;
  clear_has_friend2yaw();
}
inline float DataFriend::friend2yaw() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend2Yaw)
  return friend2yaw_;
}
inline void DataFriend::set_friend2yaw(float value) {
  set_has_friend2yaw();
  friend2yaw_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend2Yaw)
}

// required float friend3PoseX = 9;
inline bool DataFriend::has_friend3posex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DataFriend::set_has_friend3posex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DataFriend::clear_has_friend3posex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DataFriend::clear_friend3posex() {
  friend3posex_ = 0;
  clear_has_friend3posex();
}
inline float DataFriend::friend3posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend3PoseX)
  return friend3posex_;
}
inline void DataFriend::set_friend3posex(float value) {
  set_has_friend3posex();
  friend3posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend3PoseX)
}

// required float friend3PoseY = 10;
inline bool DataFriend::has_friend3posey() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DataFriend::set_has_friend3posey() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DataFriend::clear_has_friend3posey() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DataFriend::clear_friend3posey() {
  friend3posey_ = 0;
  clear_has_friend3posey();
}
inline float DataFriend::friend3posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend3PoseY)
  return friend3posey_;
}
inline void DataFriend::set_friend3posey(float value) {
  set_has_friend3posey();
  friend3posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend3PoseY)
}

// required float friend3Yaw = 11;
inline bool DataFriend::has_friend3yaw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DataFriend::set_has_friend3yaw() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DataFriend::clear_has_friend3yaw() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DataFriend::clear_friend3yaw() {
  friend3yaw_ = 0;
  clear_has_friend3yaw();
}
inline float DataFriend::friend3yaw() const {
  // @@protoc_insertion_point(field_get:Viewer.DataFriend.friend3Yaw)
  return friend3yaw_;
}
inline void DataFriend::set_friend3yaw(float value) {
  set_has_friend3yaw();
  friend3yaw_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataFriend.friend3Yaw)
}

// -------------------------------------------------------------------

// DataEnemy

// required float enemy1PoseX = 1;
inline bool DataEnemy::has_enemy1posex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataEnemy::set_has_enemy1posex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataEnemy::clear_has_enemy1posex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataEnemy::clear_enemy1posex() {
  enemy1posex_ = 0;
  clear_has_enemy1posex();
}
inline float DataEnemy::enemy1posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy1PoseX)
  return enemy1posex_;
}
inline void DataEnemy::set_enemy1posex(float value) {
  set_has_enemy1posex();
  enemy1posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy1PoseX)
}

// required float enemy1PoseY = 2;
inline bool DataEnemy::has_enemy1posey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataEnemy::set_has_enemy1posey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataEnemy::clear_has_enemy1posey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataEnemy::clear_enemy1posey() {
  enemy1posey_ = 0;
  clear_has_enemy1posey();
}
inline float DataEnemy::enemy1posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy1PoseY)
  return enemy1posey_;
}
inline void DataEnemy::set_enemy1posey(float value) {
  set_has_enemy1posey();
  enemy1posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy1PoseY)
}

// required float enemy2PoseX = 3;
inline bool DataEnemy::has_enemy2posex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataEnemy::set_has_enemy2posex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataEnemy::clear_has_enemy2posex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataEnemy::clear_enemy2posex() {
  enemy2posex_ = 0;
  clear_has_enemy2posex();
}
inline float DataEnemy::enemy2posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy2PoseX)
  return enemy2posex_;
}
inline void DataEnemy::set_enemy2posex(float value) {
  set_has_enemy2posex();
  enemy2posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy2PoseX)
}

// required float enemy2PoseY = 4;
inline bool DataEnemy::has_enemy2posey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataEnemy::set_has_enemy2posey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataEnemy::clear_has_enemy2posey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataEnemy::clear_enemy2posey() {
  enemy2posey_ = 0;
  clear_has_enemy2posey();
}
inline float DataEnemy::enemy2posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy2PoseY)
  return enemy2posey_;
}
inline void DataEnemy::set_enemy2posey(float value) {
  set_has_enemy2posey();
  enemy2posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy2PoseY)
}

// required float enemy3PoseX = 5;
inline bool DataEnemy::has_enemy3posex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataEnemy::set_has_enemy3posex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataEnemy::clear_has_enemy3posex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataEnemy::clear_enemy3posex() {
  enemy3posex_ = 0;
  clear_has_enemy3posex();
}
inline float DataEnemy::enemy3posex() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy3PoseX)
  return enemy3posex_;
}
inline void DataEnemy::set_enemy3posex(float value) {
  set_has_enemy3posex();
  enemy3posex_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy3PoseX)
}

// required float enemy3PoseY = 6;
inline bool DataEnemy::has_enemy3posey() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataEnemy::set_has_enemy3posey() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataEnemy::clear_has_enemy3posey() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataEnemy::clear_enemy3posey() {
  enemy3posey_ = 0;
  clear_has_enemy3posey();
}
inline float DataEnemy::enemy3posey() const {
  // @@protoc_insertion_point(field_get:Viewer.DataEnemy.enemy3PoseY)
  return enemy3posey_;
}
inline void DataEnemy::set_enemy3posey(float value) {
  set_has_enemy3posey();
  enemy3posey_ = value;
  // @@protoc_insertion_point(field_set:Viewer.DataEnemy.enemy3PoseY)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Viewer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_viewer_2eproto__INCLUDED
